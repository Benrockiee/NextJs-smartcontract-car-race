(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[411,755],{35796:function(a,b,c){"use strict";c.d(b,{d:function(){return e}});var d=c(45624);class e extends d.J5{async authenticateUser(){var a;if(!this.provider||!(null!==(a=this.chainConfig)&& void 0!==a&&a.chainId))throw d.RM.notConnectedError();let{chainNamespace:b,chainId:c}=this.chainConfig;if(this.status!==d.MP.CONNECTED)throw d.RM.notConnectedError("Not connected with wallet, Please login/connect first");let e=await this.provider.request({method:"eth_accounts"});if(e&&e.length>0){let f=(0,d.Cb)(e[0],this.name);if(f){let g=(0,d.$E)(f);if(!g)return{idToken:f}}let h={domain:window.location.origin,uri:window.location.href,address:e[0],chainId:parseInt(c,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:new Date().toISOString()},i=await (0,d.tV)(h,b),j=await this.provider.request({method:"personal_sign",params:[i,e[0]]}),k=await (0,d.rn)(b,j,i,this.name,this.sessionTime);return(0,d.Fr)(e[0],this.name,k),{idToken:k}}throw d.RM.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==d.MP.CONNECTED)throw d.RM.disconnectionError("Not connected with wallet");let a=await this.provider.request({method:"eth_accounts"});a&&a.length>0&&(0,d.qz)(a[0],this.name)}}},43840:function(a,b,c){"use strict";c.r(b),c.d(b,{WalletConnectV1Adapter:function(){return n}});var d=c(4942),e=c(75426),f=c(74131);class g extends e.Z{constructor(a,b){super({cryptoLib:f,connectorOpts:a,pushServerOpts:b})}}var h=g,i=c(45624),j=c(35796),k=c(52062);let l=[{name:"Rainbow",chains:[i.EN.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[i.EN.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function m(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}class n extends j.d{constructor(){let a=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{};super(),(0,d.Z)(this,"name",i.rW.WALLET_CONNECT_V1),(0,d.Z)(this,"adapterNamespace",i.yk.EIP155),(0,d.Z)(this,"currentChainNamespace",i.EN.EIP155),(0,d.Z)(this,"type",i.hN.EXTERNAL),(0,d.Z)(this,"adapterOptions",void 0),(0,d.Z)(this,"status",i.MP.NOT_READY),(0,d.Z)(this,"adapterData",{uri:"",extensionAdapters:l}),(0,d.Z)(this,"connector",null),(0,d.Z)(this,"wcProvider",null),(0,d.Z)(this,"rehydrated",!1),this.adapterOptions=function(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?m(Object(c),!0).forEach(function(b){(0,d.Z)(a,b,c[b])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):m(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}({},a),this.chainConfig=a.chainConfig||null,this.sessionTime=a.sessionTime||86400}get connected(){var a;return!!(null!==(a=this.connector)&& void 0!==a&&a.connected)}get provider(){var a;return(null===(a=this.wcProvider)|| void 0===a?void 0:a.provider)||null}set provider(a){throw Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=(0,i.h2)(i.EN.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new k.WalletConnectProvider({config:{chainConfig:this.chainConfig},connector:this.connector}),this.emit(i.n2.READY,i.rW.WALLET_CONNECT_V1),this.status=i.MP.READY,i.cM.debug("initializing wallet connect v1 adapter"),this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw i.Ty.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}),this.provider;if(this.status!==i.MP.CONNECTING){var a,b;null!==(a=this.adapterOptions.adapterSettings)&& void 0!==a&&a.qrcodeModal&&(this.connector=this.getWalletConnectInstance(),this.wcProvider=new k.WalletConnectProvider({config:{chainConfig:this.chainConfig,skipLookupNetwork:null===(b=this.adapterOptions.adapterSettings)|| void 0===b?void 0:b.skipNetworkSwitching},connector:this.connector})),await this.createNewSession(),this.status=i.MP.CONNECTING,this.emit(i.n2.CONNECTING,{adapter:i.rW.WALLET_CONNECT_V1})}return new Promise((a,b)=>{if(!this.connector)return b(i.Ty.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",async()=>(this.status=i.MP.READY,this.emit(i.n2.READY,i.rW.WALLET_CONNECT_V1),b(Error("User closed modal"))));try{this.connector.on("connect",async(b,c)=>(b&&this.emit(i.n2.ERRORED,b),i.cM.debug("connected event emitted by web3auth"),await this.onConnectHandler(c.params[0]),a(this.provider)))}catch(c){i.cM.error("Wallet connect v1 adapter error while connecting",c),this.status=i.MP.READY,this.rehydrated=!0,this.emit(i.n2.ERRORED,c),b(c instanceof i.up?c:i.RM.connectionError("Failed to login with wallet connect: ".concat((null==c?void 0:c.message)||"")))}})}setAdapterSettings(a){this.status!==i.MP.READY&&null!=a&&a.sessionTime&&(this.sessionTime=a.sessionTime)}async getUserInfo(){if(!this.connected)throw i.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let a=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{cleanup:!1},{cleanup:b}=a;if(!this.connector||!this.connected)throw i.RM.notConnectedError("Not connected with wallet");await super.disconnect(),await this.connector.killSession(),this.rehydrated=!1,b?(this.connector=null,this.status=i.MP.NOT_READY,this.wcProvider=null):this.status=i.MP.READY,this.emit(i.n2.DISCONNECTED)}async addChain(a){try{var b;if(!this.wcProvider)throw i.Ty.notReady("Wallet adapter is not ready yet");let c=null===(b=this.adapterOptions.adapterSettings)|| void 0===b?void 0:b.networkSwitchModal;c&&await c.addNetwork({chainConfig:a,appOrigin:window.location.hostname}),await this.wcProvider.addChain(a)}catch(d){i.cM.error(d)}}async switchChain(a,b){var c;if(!this.wcProvider)throw i.Ty.notReady("Wallet adapter is not ready yet");let d=null===(c=this.adapterOptions.adapterSettings)|| void 0===c?void 0:c.networkSwitchModal;d&&await d.switchNetwork({currentChainConfig:b,newChainConfig:a,appOrigin:window.location.hostname}),await this.wcProvider.switchChain({chainId:b.chainId,lookup:!1,addChain:!1})}async createNewSession(){var a,b,c;let d=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw i.Ty.notReady("Wallet adapter is not ready yet");if(d.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null!==(a=this.adapterOptions)&& void 0!==a&&null!==(b=a.adapterSettings)&& void 0!==b&&b.qrcodeModal){await this.connector.createSession({chainId:parseInt((null===(c=this.chainConfig)|| void 0===c?void 0:c.chainId)||"0x1",16)});return}return new Promise((a,b)=>{var c;if(!this.connector)return b(i.Ty.notReady("Wallet adapter is not ready yet"));i.cM.debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",async(c,d)=>{var e;if(c)return this.emit(i.n2.ERRORED,i.RM.connectionError("Failed to display wallet connect qr code")),b(c);let f=d.params[0];return this.updateAdapterData({uri:f,extensionAdapters:l}),null===(e=this.connector)|| void 0===e||e.off("display_uri"),a()}),this.connector.createSession({chainId:parseInt((null===(c=this.chainConfig)|| void 0===c?void 0:c.chainId)||"0x1",16)}).catch(a=>(i.cM.error("error while creating new wallet connect session",a),this.emit(i.n2.ERRORED,a),b(a)))})}async onConnectHandler(a){if(!this.connector||!this.wcProvider)throw i.Ty.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw i.Ty.invalidParams("Chain config is not set");let{chainId:b}=a;if(i.cM.debug("connected chainId in hex"),b!==parseInt(this.chainConfig.chainId,16)){var c,d,e;let f=(0,i.h2)(i.EN.EIP155,b)||{chainId:"0x".concat(b.toString(16)),displayName:"Unknown Network"},g=null===(c=this.adapterOptions.adapterSettings)|| void 0===c?void 0:c.qrcodeModal;if(!g||g&&!(null!==(d=this.adapterOptions)&& void 0!==d&&null!==(e=d.adapterSettings)&& void 0!==e&&e.skipNetworkSwitching))try{await this.addChain(this.chainConfig),await this.switchChain(f,this.chainConfig),this.connector=this.getWalletConnectInstance()}catch(h){i.cM.error("error while chain switching",h),await this.createNewSession({forceNewSession:!0}),this.emit(i.n2.ERRORED,i.Ty.fromCode(5e3,"Not connected to correct network. Expected: ".concat(this.chainConfig.displayName,", Current: ").concat((null==f?void 0:f.displayName)||b,", Please switch to correct network from wallet"))),this.status=i.MP.READY,this.rehydrated=!0;return}}await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=i.MP.CONNECTED,this.emit(i.n2.CONNECTED,{adapter:i.rW.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(a){a.on("session_update",async a=>{a&&this.emit(i.n2.ERRORED,a)})}getWalletConnectInstance(){let a=this.adapterOptions.adapterSettings||{};return a.bridge=a.bridge||"https://bridge.walletconnect.org",new h(a)}}},993:function(){},32772:function(){},88924:function(){}}])